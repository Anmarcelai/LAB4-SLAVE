

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 11:54:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448                           
   449                           	psect	idataBANK0
   450  02F0                     __pidataBANK0:	
   451                           
   452                           ;initializer for _disp2
   453  02F0  3401               	retlw	1
   454                           
   455                           ;initializer for _disp1
   456  02F1  340F               	retlw	15
   457  0008                     _PORTD	set	8
   458  0006                     _PORTB	set	6
   459  001E                     _ADRESH	set	30
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  001F                     _ADCON0bits	set	31
   463  000C                     _PIR1bits	set	12
   464  000B                     _INTCONbits	set	11
   465  0019                     _TXREG	set	25
   466  0018                     _RCSTA	set	24
   467  0063                     _SSPIF	set	99
   468  0087                     _TRISCbits	set	135
   469  0085                     _TRISAbits	set	133
   470  0088                     _TRISD	set	136
   471  0086                     _TRISB	set	134
   472  0094                     _SSPSTATbits	set	148
   473  0094                     _SSPSTAT	set	148
   474  009F                     _ADCON1bits	set	159
   475  0098                     _TXSTAbits	set	152
   476  0099                     _SPBRG	set	153
   477  0098                     _TXSTA	set	152
   478  008C                     _PIE1bits	set	140
   479  0087                     _TRISC	set	135
   480  043B                     _TRISC3	set	1083
   481  043D                     _TRISC5	set	1085
   482  0189                     _ANSELH	set	393
   483  0188                     _ANSEL	set	392
   484  0188                     _ANSELbits	set	392
   485  0187                     _BAUDCTLbits	set	391
   486                           
   487                           ; #config settings
   488  0000                     
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491  000F                     __initialization:	
   492                           
   493                           ; Initialize objects allocated to BANK0
   494  000F  120A  118A  22F0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   495  0014  00C8               	movwf	__pdataBANK0& (0+127)
   496  0015  120A  118A  22F1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   497  001A  00C9               	movwf	(__pdataBANK0+1)& (0+127)
   498                           
   499                           ; Clear objects allocated to BANK0
   500  001B  1383               	bcf	3,7	;select IRP bank0
   501  001C  3020               	movlw	low __pbssBANK0
   502  001D  0084               	movwf	4
   503  001E  3036               	movlw	low (__pbssBANK0+22)
   504  001F  120A  118A  22DB  120A  118A  	fcall	clear_ram0
   505  0024                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0024                     __end_of__initialization:	
   509  0024  0183               	clrf	3
   510  0025  120A  118A  29CE   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513  0020                     __pbssBANK0:	
   514  0020                     _Sensor22:	
   515  0020                     	ds	4
   516  0024                     _Sensor12:	
   517  0024                     	ds	4
   518  0028                     _Sensor2:	
   519  0028                     	ds	4
   520  002C                     _Sensor1:	
   521  002C                     	ds	4
   522  0030                     _Channel:	
   523  0030                     	ds	2
   524  0032                     _ncompleto:	
   525  0032                     	ds	2
   526  0034                     _Var1:	
   527  0034                     	ds	1
   528  0035                     _adc:	
   529  0035                     	ds	1
   530                           
   531                           	psect	dataBANK0
   532  0048                     __pdataBANK0:	
   533  0048                     _disp2:	
   534  0048                     	ds	1
   535  0049                     _disp1:	
   536  0049                     	ds	1
   537                           
   538                           	psect	clrtext
   539  02DB                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543  02DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   544  02DC                     clrloop0:	
   545  02DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   546  02DD  0A84               	incf	4,f	;increment pointer
   547  02DE  0604               	xorwf	4,w	;XOR with final address
   548  02DF  1903               	btfsc	3,2	;have we reached the end yet?
   549  02E0  3400               	retlw	0	;all done for this memory range, return
   550  02E1  0604               	xorwf	4,w	;XOR again to restore value
   551  02E2  2ADC               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:	
   555  0070                     ?_setup:	
   556  0070                     ?_spiReceiveWait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_spiReceiveWait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_spiWrite:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_spiWrite:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_spiRead:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_spiRead:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_isr:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_main:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?___fltol:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     spiWrite@dat:	
   584                           ; 4 bytes @ 0x0
   585                           
   586  0070                     ___fltol@f1:	
   587                           ; 1 bytes @ 0x0
   588                           
   589                           
   590                           ; 4 bytes @ 0x0
   591  0070                     	ds	4
   592  0074                     ??___fltol:	
   593                           
   594                           ; 1 bytes @ 0x4
   595  0074                     	ds	5
   596  0079                     ___fltol@sign1:	
   597                           
   598                           ; 1 bytes @ 0x9
   599  0079                     	ds	1
   600  007A                     ___fltol@exp1:	
   601                           
   602                           ; 1 bytes @ 0xA
   603  007A                     	ds	1
   604  007B                     ??_isr:	
   605                           
   606                           ; 1 bytes @ 0xB
   607  007B                     	ds	3
   608                           
   609                           	psect	cstackBANK0
   610  0036                     __pcstackBANK0:	
   611  0036                     ?_spiInit:	
   612  0036                     ?_configuracionADC:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0036                     ?___xxtofl:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0036                     configuracionADC@channel:	
   619                           ; 4 bytes @ 0x0
   620                           
   621  0036                     spiInit@sDataSample:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0036                     ___xxtofl@val:	
   625                           ; 1 bytes @ 0x0
   626                           
   627                           
   628                           ; 4 bytes @ 0x0
   629  0036                     	ds	1
   630  0037                     ??_configuracionADC:	
   631  0037                     spiInit@sClockIdle:	
   632                           ; 1 bytes @ 0x1
   633                           
   634                           
   635                           ; 1 bytes @ 0x1
   636  0037                     	ds	1
   637  0038                     spiInit@sTransmitEdge:	
   638                           
   639                           ; 1 bytes @ 0x2
   640  0038                     	ds	1
   641  0039                     ??_spiInit:	
   642  0039                     configuracionADC@FOSC:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0039                     spiInit@sType:	
   646                           ; 1 bytes @ 0x3
   647                           
   648                           
   649                           ; 1 bytes @ 0x3
   650  0039                     	ds	1
   651  003A                     ??_setup:	
   652  003A                     ??___xxtofl:	
   653                           ; 1 bytes @ 0x4
   654                           
   655                           
   656                           ; 1 bytes @ 0x4
   657  003A                     	ds	4
   658  003E                     ___xxtofl@sign:	
   659                           
   660                           ; 1 bytes @ 0x8
   661  003E                     	ds	1
   662  003F                     ___xxtofl@exp:	
   663                           
   664                           ; 1 bytes @ 0x9
   665  003F                     	ds	1
   666  0040                     ___xxtofl@arg:	
   667                           
   668                           ; 4 bytes @ 0xA
   669  0040                     	ds	4
   670  0044                     ??_main:	
   671                           
   672                           ; 1 bytes @ 0xE
   673  0044                     	ds	4
   674                           
   675                           	psect	maintext
   676  01CE                     __pmaintext:	
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 81 in file "MAIN.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : B00/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       4       0       0       0
   699 ;;      Totals:         0       4       0       0       0
   700 ;;Total ram usage:        4 bytes
   701 ;; Hardware stack levels required when called:    5
   702 ;; This function calls:
   703 ;;		___xxtofl
   704 ;;		_setup
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _main
   712  01CE                     _main:	
   713  01CE                     l1210:	
   714                           ;incstack = 0
   715                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   716                           
   717                           
   718                           ;MAIN.c: 82:     setup();
   719  01CE  120A  118A  2285  120A  118A  	fcall	_setup
   720  01D3                     l1212:	
   721                           
   722                           ;MAIN.c: 88:          if (adc==1){
   723  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   724  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   725  01D5  0335               	decf	_adc,w
   726  01D6  1D03               	btfss	3,2
   727  01D7  29D9               	goto	u681
   728  01D8  29DA               	goto	u680
   729  01D9                     u681:	
   730  01D9  29D3               	goto	l1212
   731  01DA                     u680:	
   732  01DA                     l1214:	
   733                           
   734                           ;MAIN.c: 89:            if (Channel==0){
   735  01DA  0830               	movf	_Channel,w
   736  01DB  0431               	iorwf	_Channel+1,w
   737  01DC  1D03               	btfss	3,2
   738  01DD  29DF               	goto	u691
   739  01DE  29E0               	goto	u690
   740  01DF                     u691:	
   741  01DF  2A06               	goto	l1222
   742  01E0                     u690:	
   743  01E0                     l1216:	
   744                           
   745                           ;MAIN.c: 90:                Channel=1;
   746  01E0  3001               	movlw	1
   747  01E1  00B0               	movwf	_Channel
   748  01E2  3000               	movlw	0
   749  01E3  00B1               	movwf	_Channel+1
   750  01E4                     l1218:	
   751                           
   752                           ;MAIN.c: 91:                ADCON0bits.CHS= Channel;
   753  01E4  081F               	movf	31,w	;volatile
   754  01E5  39C3               	andlw	-61
   755  01E6  3804               	iorlw	4
   756  01E7  009F               	movwf	31	;volatile
   757  01E8                     l1220:	
   758                           
   759                           ;MAIN.c: 92:                Sensor1=ADRESH;
   760  01E8  081E               	movf	30,w	;volatile
   761  01E9  00C4               	movwf	??_main
   762  01EA  01C5               	clrf	??_main+1
   763  01EB  01C6               	clrf	??_main+2
   764  01EC  01C7               	clrf	??_main+3
   765  01ED  0847               	movf	??_main+3,w
   766  01EE  00B9               	movwf	___xxtofl@val+3
   767  01EF  0846               	movf	??_main+2,w
   768  01F0  00B8               	movwf	___xxtofl@val+2
   769  01F1  0845               	movf	??_main+1,w
   770  01F2  00B7               	movwf	___xxtofl@val+1
   771  01F3  0844               	movf	??_main,w
   772  01F4  00B6               	movwf	___xxtofl@val
   773  01F5  3000               	movlw	0
   774  01F6  120A  118A  2028  120A  118A  	fcall	___xxtofl
   775  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   776  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   777  01FD  0839               	movf	?___xxtofl+3,w
   778  01FE  00AF               	movwf	_Sensor1+3
   779  01FF  0838               	movf	?___xxtofl+2,w
   780  0200  00AE               	movwf	_Sensor1+2
   781  0201  0837               	movf	?___xxtofl+1,w
   782  0202  00AD               	movwf	_Sensor1+1
   783  0203  0836               	movf	?___xxtofl,w
   784  0204  00AC               	movwf	_Sensor1
   785                           
   786                           ;MAIN.c: 93:            }else if (Channel==1){
   787  0205  2A2D               	goto	l1230
   788  0206                     l1222:	
   789  0206  0330               	decf	_Channel,w
   790  0207  0431               	iorwf	_Channel+1,w
   791  0208  1D03               	btfss	3,2
   792  0209  2A0B               	goto	u701
   793  020A  2A0C               	goto	u700
   794  020B                     u701:	
   795  020B  2A2D               	goto	l1230
   796  020C                     u700:	
   797  020C                     l1224:	
   798                           
   799                           ;MAIN.c: 94:                Channel=0;
   800  020C  01B0               	clrf	_Channel
   801  020D  01B1               	clrf	_Channel+1
   802  020E                     l1226:	
   803                           
   804                           ;MAIN.c: 95:                ADCON0bits.CHS= Channel;
   805  020E  30C3               	movlw	-61
   806  020F  059F               	andwf	31,f	;volatile
   807  0210                     l1228:	
   808                           
   809                           ;MAIN.c: 96:                Sensor2=ADRESH;
   810  0210  081E               	movf	30,w	;volatile
   811  0211  00C4               	movwf	??_main
   812  0212  01C5               	clrf	??_main+1
   813  0213  01C6               	clrf	??_main+2
   814  0214  01C7               	clrf	??_main+3
   815  0215  0847               	movf	??_main+3,w
   816  0216  00B9               	movwf	___xxtofl@val+3
   817  0217  0846               	movf	??_main+2,w
   818  0218  00B8               	movwf	___xxtofl@val+2
   819  0219  0845               	movf	??_main+1,w
   820  021A  00B7               	movwf	___xxtofl@val+1
   821  021B  0844               	movf	??_main,w
   822  021C  00B6               	movwf	___xxtofl@val
   823  021D  3000               	movlw	0
   824  021E  120A  118A  2028  120A  118A  	fcall	___xxtofl
   825  0223  1283               	bcf	3,5	;RP0=0, select bank0
   826  0224  1303               	bcf	3,6	;RP1=0, select bank0
   827  0225  0839               	movf	?___xxtofl+3,w
   828  0226  00AB               	movwf	_Sensor2+3
   829  0227  0838               	movf	?___xxtofl+2,w
   830  0228  00AA               	movwf	_Sensor2+2
   831  0229  0837               	movf	?___xxtofl+1,w
   832  022A  00A9               	movwf	_Sensor2+1
   833  022B  0836               	movf	?___xxtofl,w
   834  022C  00A8               	movwf	_Sensor2
   835  022D                     l1230:	
   836                           
   837                           ;MAIN.c: 98:            ADCON0bits.GO_DONE = 1;
   838  022D  149F               	bsf	31,1	;volatile
   839  022E  29D3               	goto	l1212
   840  022F  120A  118A  280C   	ljmp	start
   841  0232                     __end_of_main:	
   842                           
   843                           	psect	text1
   844  0285                     __ptext1:	
   845 ;; *************** function _setup *****************
   846 ;; Defined at:
   847 ;;		line 113 in file "MAIN.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    4
   868 ;; This function calls:
   869 ;;		_configuracionADC
   870 ;;		_spiInit
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _setup
   878  0285                     _setup:	
   879  0285                     l1078:	
   880                           ;incstack = 0
   881                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   882                           
   883                           
   884                           ;MAIN.c: 114:     ANSEL = 0b00000011;
   885  0285  3003               	movlw	3
   886  0286  1683               	bsf	3,5	;RP0=1, select bank3
   887  0287  1703               	bsf	3,6	;RP1=1, select bank3
   888  0288  0088               	movwf	8	;volatile
   889  0289                     l1080:	
   890                           
   891                           ;MAIN.c: 115:     ANSELH = 0;
   892  0289  0189               	clrf	9	;volatile
   893  028A                     l1082:	
   894                           
   895                           ;MAIN.c: 117:     TRISB = 0;
   896  028A  1683               	bsf	3,5	;RP0=1, select bank1
   897  028B  1303               	bcf	3,6	;RP1=0, select bank1
   898  028C  0186               	clrf	6	;volatile
   899  028D                     l1084:	
   900                           
   901                           ;MAIN.c: 118:     TRISD = 0;
   902  028D  0188               	clrf	8	;volatile
   903  028E                     l1086:	
   904                           
   905                           ;MAIN.c: 120:     PORTB = 0;
   906  028E  1283               	bcf	3,5	;RP0=0, select bank0
   907  028F  1303               	bcf	3,6	;RP1=0, select bank0
   908  0290  0186               	clrf	6	;volatile
   909  0291                     l1088:	
   910                           
   911                           ;MAIN.c: 121:     PORTD = 0;
   912  0291  0188               	clrf	8	;volatile
   913  0292                     l1090:	
   914                           
   915                           ;MAIN.c: 123:     INTCONbits.GIE = 1;
   916  0292  178B               	bsf	11,7	;volatile
   917  0293                     l1092:	
   918                           
   919                           ;MAIN.c: 124:     INTCONbits.PEIE = 1;
   920  0293  170B               	bsf	11,6	;volatile
   921  0294                     l1094:	
   922                           
   923                           ;MAIN.c: 125:     PIR1bits.SSPIF = 0;
   924  0294  118C               	bcf	12,3	;volatile
   925  0295                     l1096:	
   926                           
   927                           ;MAIN.c: 126:     PIE1bits.SSPIE = 1;
   928  0295  1683               	bsf	3,5	;RP0=1, select bank1
   929  0296  1303               	bcf	3,6	;RP1=0, select bank1
   930  0297  158C               	bsf	12,3	;volatile
   931  0298                     l1098:	
   932                           
   933                           ;MAIN.c: 127:     TRISAbits.TRISA5 = 1;
   934  0298  1685               	bsf	5,5	;volatile
   935  0299                     l1100:	
   936                           
   937                           ;MAIN.c: 128:     TRISCbits.TRISC5 = 0;
   938  0299  1287               	bcf	7,5	;volatile
   939  029A                     l1102:	
   940                           
   941                           ;MAIN.c: 129:     TRISCbits.TRISC4 = 1;
   942  029A  1607               	bsf	7,4	;volatile
   943  029B                     l1104:	
   944                           
   945                           ;MAIN.c: 130:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   946  029B  1283               	bcf	3,5	;RP0=0, select bank0
   947  029C  1303               	bcf	3,6	;RP1=0, select bank0
   948  029D  01B6               	clrf	spiInit@sDataSample
   949  029E  01B7               	clrf	spiInit@sClockIdle
   950  029F  01B8               	clrf	spiInit@sTransmitEdge
   951  02A0  3024               	movlw	36
   952  02A1  120A  118A  22B4  120A  118A  	fcall	_spiInit
   953  02A6                     l1106:	
   954                           
   955                           ;MAIN.c: 132:     configuracionADC(1, 0);
   956  02A6  1283               	bcf	3,5	;RP0=0, select bank0
   957  02A7  1303               	bcf	3,6	;RP1=0, select bank0
   958  02A8  01B6               	clrf	configuracionADC@channel
   959  02A9  3001               	movlw	1
   960  02AA  120A  118A  215E  120A  118A  	fcall	_configuracionADC
   961  02AF                     l1108:	
   962                           
   963                           ;MAIN.c: 133:     TRISAbits.TRISA0 = 1;
   964  02AF  1683               	bsf	3,5	;RP0=1, select bank1
   965  02B0  1303               	bcf	3,6	;RP1=0, select bank1
   966  02B1  1405               	bsf	5,0	;volatile
   967  02B2                     l1110:	
   968                           
   969                           ;MAIN.c: 134:     TRISAbits.TRISA1 = 1;
   970  02B2  1485               	bsf	5,1	;volatile
   971  02B3                     l186:	
   972  02B3  0008               	return
   973  02B4                     __end_of_setup:	
   974                           
   975                           	psect	text2
   976  02B4                     __ptext2:	
   977 ;; *************** function _spiInit *****************
   978 ;; Defined at:
   979 ;;		line 12 in file "SPI.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  sType           1    wreg     enum E1264
   982 ;;  sDataSample     1    0[BANK0 ] enum E1272
   983 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   984 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  sType           1    3[BANK0 ] enum E1264
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       3       0       0       0
   997 ;;      Locals:         0       1       0       0       0
   998 ;;      Temps:          0       0       0       0       0
   999 ;;      Totals:         0       4       0       0       0
  1000 ;;Total ram usage:        4 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    3
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_setup
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _spiInit
  1012  02B4                     _spiInit:	
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1016                           ;spiInit@sType stored from wreg
  1017  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1018  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1019  02B6  00B9               	movwf	spiInit@sType
  1020  02B7                     l1058:	
  1021                           
  1022                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1023  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1024  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1025  02B9  1287               	bcf	7,5	;volatile
  1026                           
  1027                           ;SPI.c: 15:     if(sType & 0b00000100)
  1028  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1029  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1030  02BC  1D39               	btfss	spiInit@sType,2
  1031  02BD  2ABF               	goto	u381
  1032  02BE  2AC0               	goto	u380
  1033  02BF                     u381:	
  1034  02BF  2AC6               	goto	l1064
  1035  02C0                     u380:	
  1036  02C0                     l1060:	
  1037                           
  1038                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1039  02C0  0838               	movf	spiInit@sTransmitEdge,w
  1040  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1041  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1042  02C3  0094               	movwf	20	;volatile
  1043  02C4                     l1062:	
  1044                           
  1045                           ;SPI.c: 18:         TRISC3 = 1;
  1046  02C4  1587               	bsf	7,3	;volatile
  1047                           
  1048                           ;SPI.c: 19:     }
  1049  02C5  2ACC               	goto	l85
  1050  02C6                     l1064:	
  1051                           
  1052                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1053  02C6  0836               	movf	spiInit@sDataSample,w
  1054  02C7  0438               	iorwf	spiInit@sTransmitEdge,w
  1055  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  1056  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  1057  02CA  0094               	movwf	20	;volatile
  1058  02CB                     l1066:	
  1059                           
  1060                           ;SPI.c: 23:         TRISC3 = 0;
  1061  02CB  1187               	bcf	7,3	;volatile
  1062  02CC                     l85:	
  1063                           ;SPI.c: 24:     }
  1064                           
  1065                           
  1066                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1067  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1068  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1069  02CE  0839               	movf	spiInit@sType,w
  1070  02CF  0437               	iorwf	spiInit@sClockIdle,w
  1071  02D0  0094               	movwf	20	;volatile
  1072  02D1                     l86:	
  1073  02D1  0008               	return
  1074  02D2                     __end_of_spiInit:	
  1075                           
  1076                           	psect	text3
  1077  015E                     __ptext3:	
  1078 ;; *************** function _configuracionADC *****************
  1079 ;; Defined at:
  1080 ;;		line 4 in file "ADC.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  FOSC            1    wreg     unsigned char 
  1083 ;;  channel         1    0[BANK0 ] unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  FOSC            1    3[BANK0 ] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    0[BANK0 ] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       1       0       0       0
  1096 ;;      Locals:         0       1       0       0       0
  1097 ;;      Temps:          0       2       0       0       0
  1098 ;;      Totals:         0       4       0       0       0
  1099 ;;Total ram usage:        4 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    3
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_setup
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _configuracionADC
  1111  015E                     _configuracionADC:	
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _configuracionADC: [wreg-fsr0h+status,2+status,0]
  1115                           ;configuracionADC@FOSC stored from wreg
  1116  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1117  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0160  00B9               	movwf	configuracionADC@FOSC
  1119  0161                     l1040:	
  1120                           
  1121                           ;ADC.c: 6:     INTCONbits.PEIE=1;
  1122  0161  170B               	bsf	11,6	;volatile
  1123                           
  1124                           ;ADC.c: 7:     PIE1bits.ADIE = 1;
  1125  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0164  170C               	bsf	12,6	;volatile
  1128                           
  1129                           ;ADC.c: 8:     PIR1bits.ADIF=0;
  1130  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0167  130C               	bcf	12,6	;volatile
  1133                           
  1134                           ;ADC.c: 9:     ADCON1bits.ADFM=0;
  1135  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1136  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1137  016A  139F               	bcf	31,7	;volatile
  1138                           
  1139                           ;ADC.c: 10:     ADCON1bits.VCFG1=0;
  1140  016B  129F               	bcf	31,5	;volatile
  1141                           
  1142                           ;ADC.c: 11:     ADCON1bits.VCFG0=0;
  1143  016C  121F               	bcf	31,4	;volatile
  1144                           
  1145                           ;ADC.c: 12:     ADCON0bits.ADON=1;
  1146  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1147  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1148  016F  141F               	bsf	31,0	;volatile
  1149                           
  1150                           ;ADC.c: 14:     switch (FOSC){
  1151  0170  297D               	goto	l1044
  1152  0171                     l58:	
  1153                           ;ADC.c: 15:         case 0:
  1154                           
  1155                           
  1156                           ;ADC.c: 16:             ADCON0bits.ADCS1=0;
  1157  0171  139F               	bcf	31,7	;volatile
  1158                           
  1159                           ;ADC.c: 17:             ADCON0bits.ADCS0=0;
  1160  0172  131F               	bcf	31,6	;volatile
  1161                           
  1162                           ;ADC.c: 18:             break;
  1163  0173  29B3               	goto	l1048
  1164  0174                     l60:	
  1165                           ;ADC.c: 19:         case 1:
  1166                           
  1167                           
  1168                           ;ADC.c: 20:             ADCON0bits.ADCS1=0;
  1169  0174  139F               	bcf	31,7	;volatile
  1170                           
  1171                           ;ADC.c: 21:             ADCON0bits.ADCS0=1;
  1172  0175  171F               	bsf	31,6	;volatile
  1173                           
  1174                           ;ADC.c: 22:             break;
  1175  0176  29B3               	goto	l1048
  1176  0177                     l61:	
  1177                           ;ADC.c: 23:         case 2:
  1178                           
  1179                           
  1180                           ;ADC.c: 24:             ADCON0bits.ADCS1=1;
  1181  0177  179F               	bsf	31,7	;volatile
  1182                           
  1183                           ;ADC.c: 25:             ADCON0bits.ADCS0=0;
  1184  0178  131F               	bcf	31,6	;volatile
  1185                           
  1186                           ;ADC.c: 26:             break;
  1187  0179  29B3               	goto	l1048
  1188  017A                     l62:	
  1189                           ;ADC.c: 27:         case 3:
  1190                           
  1191                           
  1192                           ;ADC.c: 28:             ADCON0bits.ADCS1=1;
  1193  017A  179F               	bsf	31,7	;volatile
  1194                           
  1195                           ;ADC.c: 29:             ADCON0bits.ADCS0=1;
  1196  017B  171F               	bsf	31,6	;volatile
  1197                           
  1198                           ;ADC.c: 30:             break;
  1199  017C  29B3               	goto	l1048
  1200  017D                     l1044:	
  1201  017D  0839               	movf	configuracionADC@FOSC,w
  1202  017E  00B7               	movwf	??_configuracionADC
  1203  017F  01B8               	clrf	??_configuracionADC+1
  1204                           
  1205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1206                           ; Switch size 1, requested type "simple"
  1207                           ; Number of cases is 1, Range of values is 0 to 0
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte            4     3 (average)
  1211                           ; direct_byte           11     8 (fixed)
  1212                           ; jumptable            260     6 (fixed)
  1213                           ;	Chosen strategy is simple_byte
  1214  0180  0838               	movf	??_configuracionADC+1,w
  1215  0181  3A00               	xorlw	0	; case 0
  1216  0182  1903               	skipnz
  1217  0183  2985               	goto	l1272
  1218  0184  29B3               	goto	l1048
  1219  0185                     l1272:	
  1220                           
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 4, Range of values is 0 to 3
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte           13     7 (average)
  1226                           ; direct_byte           20     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  0185  0837               	movf	??_configuracionADC,w
  1230  0186  3A00               	xorlw	0	; case 0
  1231  0187  1903               	skipnz
  1232  0188  2971               	goto	l58
  1233  0189  3A01               	xorlw	1	; case 1
  1234  018A  1903               	skipnz
  1235  018B  2974               	goto	l60
  1236  018C  3A03               	xorlw	3	; case 2
  1237  018D  1903               	skipnz
  1238  018E  2977               	goto	l61
  1239  018F  3A01               	xorlw	1	; case 3
  1240  0190  1903               	skipnz
  1241  0191  297A               	goto	l62
  1242  0192  29B3               	goto	l1048
  1243  0193                     l64:	
  1244                           ;ADC.c: 33:         case 0:
  1245                           
  1246                           
  1247                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
  1248  0193  111F               	bcf	31,2	;volatile
  1249                           
  1250                           ;ADC.c: 35:             ADCON0bits.CHS1 = 0;
  1251  0194  119F               	bcf	31,3	;volatile
  1252                           
  1253                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1254  0195  121F               	bcf	31,4	;volatile
  1255                           
  1256                           ;ADC.c: 37:             ADCON0bits.CHS3 = 0;
  1257  0196  129F               	bcf	31,5	;volatile
  1258                           
  1259                           ;ADC.c: 38:             ANSELbits.ANS0=1;
  1260  0197  1683               	bsf	3,5	;RP0=1, select bank3
  1261  0198  1703               	bsf	3,6	;RP1=1, select bank3
  1262  0199  1408               	bsf	8,0	;volatile
  1263                           
  1264                           ;ADC.c: 39:             break;
  1265  019A  29C9               	goto	l65
  1266  019B                     l66:	
  1267                           ;ADC.c: 40:         case 1:
  1268                           
  1269                           
  1270                           ;ADC.c: 41:             ADCON0bits.CHS0 = 1;
  1271  019B  151F               	bsf	31,2	;volatile
  1272                           
  1273                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1274  019C  119F               	bcf	31,3	;volatile
  1275                           
  1276                           ;ADC.c: 43:             ADCON0bits.CHS2 = 0;
  1277  019D  121F               	bcf	31,4	;volatile
  1278                           
  1279                           ;ADC.c: 44:             ADCON0bits.CHS3 = 0;
  1280  019E  129F               	bcf	31,5	;volatile
  1281                           
  1282                           ;ADC.c: 45:             ANSELbits.ANS1=1;
  1283  019F  1683               	bsf	3,5	;RP0=1, select bank3
  1284  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  1285  01A1  1488               	bsf	8,1	;volatile
  1286                           
  1287                           ;ADC.c: 46:             break;
  1288  01A2  29C9               	goto	l65
  1289  01A3                     l67:	
  1290                           ;ADC.c: 47:         case 2:
  1291                           
  1292                           
  1293                           ;ADC.c: 48:             ADCON0bits.CHS0 = 0;
  1294  01A3  111F               	bcf	31,2	;volatile
  1295                           
  1296                           ;ADC.c: 49:             ADCON0bits.CHS1 = 1;
  1297  01A4  159F               	bsf	31,3	;volatile
  1298                           
  1299                           ;ADC.c: 50:             ADCON0bits.CHS2 = 0;
  1300  01A5  121F               	bcf	31,4	;volatile
  1301                           
  1302                           ;ADC.c: 51:             ADCON0bits.CHS3 = 0;
  1303  01A6  129F               	bcf	31,5	;volatile
  1304                           
  1305                           ;ADC.c: 52:             ANSELbits.ANS2=1;
  1306  01A7  1683               	bsf	3,5	;RP0=1, select bank3
  1307  01A8  1703               	bsf	3,6	;RP1=1, select bank3
  1308  01A9  1508               	bsf	8,2	;volatile
  1309                           
  1310                           ;ADC.c: 53:             break;
  1311  01AA  29C9               	goto	l65
  1312  01AB                     l68:	
  1313                           ;ADC.c: 54:         case 3:
  1314                           
  1315                           
  1316                           ;ADC.c: 55:             ADCON0bits.CHS0 = 1;
  1317  01AB  151F               	bsf	31,2	;volatile
  1318                           
  1319                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1320  01AC  159F               	bsf	31,3	;volatile
  1321                           
  1322                           ;ADC.c: 57:             ADCON0bits.CHS2 = 0;
  1323  01AD  121F               	bcf	31,4	;volatile
  1324                           
  1325                           ;ADC.c: 58:             ADCON0bits.CHS3 = 0;
  1326  01AE  129F               	bcf	31,5	;volatile
  1327                           
  1328                           ;ADC.c: 59:             ANSELbits.ANS3=1;
  1329  01AF  1683               	bsf	3,5	;RP0=1, select bank3
  1330  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  1331  01B1  1588               	bsf	8,3	;volatile
  1332                           
  1333                           ;ADC.c: 60:             break;
  1334  01B2  29C9               	goto	l65
  1335  01B3                     l1048:	
  1336  01B3  0836               	movf	configuracionADC@channel,w
  1337  01B4  00B7               	movwf	??_configuracionADC
  1338  01B5  01B8               	clrf	??_configuracionADC+1
  1339                           
  1340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 1, Range of values is 0 to 0
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ; direct_byte           11     8 (fixed)
  1347                           ; jumptable            260     6 (fixed)
  1348                           ;	Chosen strategy is simple_byte
  1349  01B6  0838               	movf	??_configuracionADC+1,w
  1350  01B7  3A00               	xorlw	0	; case 0
  1351  01B8  1903               	skipnz
  1352  01B9  29BB               	goto	l1274
  1353  01BA  29C9               	goto	l65
  1354  01BB                     l1274:	
  1355                           
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 4, Range of values is 0 to 3
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte           13     7 (average)
  1361                           ; direct_byte           20     8 (fixed)
  1362                           ; jumptable            260     6 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364  01BB  0837               	movf	??_configuracionADC,w
  1365  01BC  3A00               	xorlw	0	; case 0
  1366  01BD  1903               	skipnz
  1367  01BE  2993               	goto	l64
  1368  01BF  3A01               	xorlw	1	; case 1
  1369  01C0  1903               	skipnz
  1370  01C1  299B               	goto	l66
  1371  01C2  3A03               	xorlw	3	; case 2
  1372  01C3  1903               	skipnz
  1373  01C4  29A3               	goto	l67
  1374  01C5  3A01               	xorlw	1	; case 3
  1375  01C6  1903               	skipnz
  1376  01C7  29AB               	goto	l68
  1377  01C8  29C9               	goto	l65
  1378  01C9                     l65:	
  1379                           
  1380                           ;ADC.c: 62:     ADCON0bits.GO_DONE=1;
  1381  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1382  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1383  01CB  149F               	bsf	31,1	;volatile
  1384                           
  1385                           ;ADC.c: 63:     INTCONbits.GIE = 1;
  1386  01CC  178B               	bsf	11,7	;volatile
  1387  01CD                     l69:	
  1388  01CD  0008               	return
  1389  01CE                     __end_of_configuracionADC:	
  1390                           
  1391                           	psect	text4
  1392  0028                     __ptext4:	
  1393 ;; *************** function ___xxtofl *****************
  1394 ;; Defined at:
  1395 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  sign            1    wreg     unsigned char 
  1398 ;;  val             4    0[BANK0 ] long 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  sign            1    8[BANK0 ] unsigned char 
  1401 ;;  arg             4   10[BANK0 ] unsigned long 
  1402 ;;  exp             1    9[BANK0 ] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  4    0[BANK0 ] unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       4       0       0       0
  1413 ;;      Locals:         0       6       0       0       0
  1414 ;;      Temps:          0       4       0       0       0
  1415 ;;      Totals:         0      14       0       0       0
  1416 ;;Total ram usage:       14 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    3
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function ___xxtofl
  1428  0028                     ___xxtofl:	
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1432                           ;___xxtofl@sign stored from wreg
  1433  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1435  002A  00BE               	movwf	___xxtofl@sign
  1436  002B                     l1148:	
  1437  002B  083E               	movf	___xxtofl@sign,w
  1438  002C  1903               	btfsc	3,2
  1439  002D  282F               	goto	u501
  1440  002E  2830               	goto	u500
  1441  002F                     u501:	
  1442  002F  2844               	goto	l1154
  1443  0030                     u500:	
  1444  0030                     l1150:	
  1445  0030  1FB9               	btfss	___xxtofl@val+3,7
  1446  0031  2833               	goto	u511
  1447  0032  2834               	goto	u510
  1448  0033                     u511:	
  1449  0033  2844               	goto	l1154
  1450  0034                     u510:	
  1451  0034                     l1152:	
  1452  0034  0936               	comf	___xxtofl@val,w
  1453  0035  00C0               	movwf	___xxtofl@arg
  1454  0036  0937               	comf	___xxtofl@val+1,w
  1455  0037  00C1               	movwf	___xxtofl@arg+1
  1456  0038  0938               	comf	___xxtofl@val+2,w
  1457  0039  00C2               	movwf	___xxtofl@arg+2
  1458  003A  0939               	comf	___xxtofl@val+3,w
  1459  003B  00C3               	movwf	___xxtofl@arg+3
  1460  003C  0AC0               	incf	___xxtofl@arg,f
  1461  003D  1903               	skipnz
  1462  003E  0AC1               	incf	___xxtofl@arg+1,f
  1463  003F  1903               	skipnz
  1464  0040  0AC2               	incf	___xxtofl@arg+2,f
  1465  0041  1903               	skipnz
  1466  0042  0AC3               	incf	___xxtofl@arg+3,f
  1467  0043  284C               	goto	l699
  1468  0044                     l1154:	
  1469  0044  0839               	movf	___xxtofl@val+3,w
  1470  0045  00C3               	movwf	___xxtofl@arg+3
  1471  0046  0838               	movf	___xxtofl@val+2,w
  1472  0047  00C2               	movwf	___xxtofl@arg+2
  1473  0048  0837               	movf	___xxtofl@val+1,w
  1474  0049  00C1               	movwf	___xxtofl@arg+1
  1475  004A  0836               	movf	___xxtofl@val,w
  1476  004B  00C0               	movwf	___xxtofl@arg
  1477  004C                     l699:	
  1478  004C  0839               	movf	___xxtofl@val+3,w
  1479  004D  0438               	iorwf	___xxtofl@val+2,w
  1480  004E  0437               	iorwf	___xxtofl@val+1,w
  1481  004F  0436               	iorwf	___xxtofl@val,w
  1482  0050  1D03               	skipz
  1483  0051  2853               	goto	u521
  1484  0052  2854               	goto	u520
  1485  0053                     u521:	
  1486  0053  285D               	goto	l1160
  1487  0054                     u520:	
  1488  0054                     l1156:	
  1489  0054  3000               	movlw	0
  1490  0055  00B9               	movwf	?___xxtofl+3
  1491  0056  3000               	movlw	0
  1492  0057  00B8               	movwf	?___xxtofl+2
  1493  0058  3000               	movlw	0
  1494  0059  00B7               	movwf	?___xxtofl+1
  1495  005A  3000               	movlw	0
  1496  005B  00B6               	movwf	?___xxtofl
  1497  005C  28E3               	goto	l701
  1498  005D                     l1160:	
  1499  005D  3096               	movlw	150
  1500  005E  00BA               	movwf	??___xxtofl
  1501  005F  083A               	movf	??___xxtofl,w
  1502  0060  00BF               	movwf	___xxtofl@exp
  1503  0061  286F               	goto	l1164
  1504  0062                     l1162:	
  1505  0062  3001               	movlw	1
  1506  0063  00BA               	movwf	??___xxtofl
  1507  0064  083A               	movf	??___xxtofl,w
  1508  0065  07BF               	addwf	___xxtofl@exp,f
  1509  0066  3001               	movlw	1
  1510  0067                     u535:	
  1511  0067  1003               	clrc
  1512  0068  0CC3               	rrf	___xxtofl@arg+3,f
  1513  0069  0CC2               	rrf	___xxtofl@arg+2,f
  1514  006A  0CC1               	rrf	___xxtofl@arg+1,f
  1515  006B  0CC0               	rrf	___xxtofl@arg,f
  1516  006C  3EFF               	addlw	-1
  1517  006D  1D03               	skipz
  1518  006E  2867               	goto	u535
  1519  006F                     l1164:	
  1520  006F  30FE               	movlw	254
  1521  0070  0543               	andwf	___xxtofl@arg+3,w
  1522  0071  1D03               	btfss	3,2
  1523  0072  2874               	goto	u541
  1524  0073  2875               	goto	u540
  1525  0074                     u541:	
  1526  0074  2862               	goto	l1162
  1527  0075                     u540:	
  1528  0075  2891               	goto	l705
  1529  0076                     l1166:	
  1530  0076  3001               	movlw	1
  1531  0077  00BA               	movwf	??___xxtofl
  1532  0078  083A               	movf	??___xxtofl,w
  1533  0079  07BF               	addwf	___xxtofl@exp,f
  1534  007A                     l1168:	
  1535  007A  3001               	movlw	1
  1536  007B  07C0               	addwf	___xxtofl@arg,f
  1537  007C  3000               	movlw	0
  1538  007D  1803               	skipnc
  1539  007E  3001               	movlw	1
  1540  007F  07C1               	addwf	___xxtofl@arg+1,f
  1541  0080  3000               	movlw	0
  1542  0081  1803               	skipnc
  1543  0082  3001               	movlw	1
  1544  0083  07C2               	addwf	___xxtofl@arg+2,f
  1545  0084  3000               	movlw	0
  1546  0085  1803               	skipnc
  1547  0086  3001               	movlw	1
  1548  0087  07C3               	addwf	___xxtofl@arg+3,f
  1549  0088                     l1170:	
  1550  0088  3001               	movlw	1
  1551  0089                     u555:	
  1552  0089  1003               	clrc
  1553  008A  0CC3               	rrf	___xxtofl@arg+3,f
  1554  008B  0CC2               	rrf	___xxtofl@arg+2,f
  1555  008C  0CC1               	rrf	___xxtofl@arg+1,f
  1556  008D  0CC0               	rrf	___xxtofl@arg,f
  1557  008E  3EFF               	addlw	-1
  1558  008F  1D03               	skipz
  1559  0090  2889               	goto	u555
  1560  0091                     l705:	
  1561  0091  30FF               	movlw	255
  1562  0092  0543               	andwf	___xxtofl@arg+3,w
  1563  0093  1D03               	btfss	3,2
  1564  0094  2896               	goto	u561
  1565  0095  2897               	goto	u560
  1566  0096                     u561:	
  1567  0096  2876               	goto	l1166
  1568  0097                     u560:	
  1569  0097  28A3               	goto	l1174
  1570  0098                     l1172:	
  1571  0098  3001               	movlw	1
  1572  0099  02BF               	subwf	___xxtofl@exp,f
  1573  009A  3001               	movlw	1
  1574  009B  00BA               	movwf	??___xxtofl
  1575  009C                     u575:	
  1576  009C  1003               	clrc
  1577  009D  0DC0               	rlf	___xxtofl@arg,f
  1578  009E  0DC1               	rlf	___xxtofl@arg+1,f
  1579  009F  0DC2               	rlf	___xxtofl@arg+2,f
  1580  00A0  0DC3               	rlf	___xxtofl@arg+3,f
  1581  00A1  0BBA               	decfsz	??___xxtofl,f
  1582  00A2  289C               	goto	u575
  1583  00A3                     l1174:	
  1584  00A3  1BC2               	btfsc	___xxtofl@arg+2,7
  1585  00A4  28A6               	goto	u581
  1586  00A5  28A7               	goto	u580
  1587  00A6                     u581:	
  1588  00A6  28AD               	goto	l712
  1589  00A7                     u580:	
  1590  00A7                     l1176:	
  1591  00A7  3002               	movlw	2
  1592  00A8  023F               	subwf	___xxtofl@exp,w
  1593  00A9  1803               	skipnc
  1594  00AA  28AC               	goto	u591
  1595  00AB  28AD               	goto	u590
  1596  00AC                     u591:	
  1597  00AC  2898               	goto	l1172
  1598  00AD                     u590:	
  1599  00AD                     l712:	
  1600  00AD  183F               	btfsc	___xxtofl@exp,0
  1601  00AE  28B0               	goto	u601
  1602  00AF  28B1               	goto	u600
  1603  00B0                     u601:	
  1604  00B0  28B9               	goto	l713
  1605  00B1                     u600:	
  1606  00B1                     l1178:	
  1607  00B1  30FF               	movlw	255
  1608  00B2  05C0               	andwf	___xxtofl@arg,f
  1609  00B3  30FF               	movlw	255
  1610  00B4  05C1               	andwf	___xxtofl@arg+1,f
  1611  00B5  307F               	movlw	127
  1612  00B6  05C2               	andwf	___xxtofl@arg+2,f
  1613  00B7  30FF               	movlw	255
  1614  00B8  05C3               	andwf	___xxtofl@arg+3,f
  1615  00B9                     l713:	
  1616  00B9  1003               	clrc
  1617  00BA  0CBF               	rrf	___xxtofl@exp,f
  1618  00BB                     l1180:	
  1619  00BB  083F               	movf	___xxtofl@exp,w
  1620  00BC  00BA               	movwf	??___xxtofl
  1621  00BD  01BB               	clrf	??___xxtofl+1
  1622  00BE  01BC               	clrf	??___xxtofl+2
  1623  00BF  01BD               	clrf	??___xxtofl+3
  1624  00C0  3018               	movlw	24
  1625  00C1                     u615:	
  1626  00C1  1003               	clrc
  1627  00C2  0DBA               	rlf	??___xxtofl,f
  1628  00C3  0DBB               	rlf	??___xxtofl+1,f
  1629  00C4  0DBC               	rlf	??___xxtofl+2,f
  1630  00C5  0DBD               	rlf	??___xxtofl+3,f
  1631  00C6                     u610:	
  1632  00C6  3EFF               	addlw	-1
  1633  00C7  1D03               	skipz
  1634  00C8  28C1               	goto	u615
  1635  00C9  083A               	movf	??___xxtofl,w
  1636  00CA  04C0               	iorwf	___xxtofl@arg,f
  1637  00CB  083B               	movf	??___xxtofl+1,w
  1638  00CC  04C1               	iorwf	___xxtofl@arg+1,f
  1639  00CD  083C               	movf	??___xxtofl+2,w
  1640  00CE  04C2               	iorwf	___xxtofl@arg+2,f
  1641  00CF  083D               	movf	??___xxtofl+3,w
  1642  00D0  04C3               	iorwf	___xxtofl@arg+3,f
  1643  00D1                     l1182:	
  1644  00D1  083E               	movf	___xxtofl@sign,w
  1645  00D2  1903               	btfsc	3,2
  1646  00D3  28D5               	goto	u621
  1647  00D4  28D6               	goto	u620
  1648  00D5                     u621:	
  1649  00D5  28DB               	goto	l1188
  1650  00D6                     u620:	
  1651  00D6                     l1184:	
  1652  00D6  1FB9               	btfss	___xxtofl@val+3,7
  1653  00D7  28D9               	goto	u631
  1654  00D8  28DA               	goto	u630
  1655  00D9                     u631:	
  1656  00D9  28DB               	goto	l1188
  1657  00DA                     u630:	
  1658  00DA                     l1186:	
  1659  00DA  17C3               	bsf	___xxtofl@arg+3,7
  1660  00DB                     l1188:	
  1661  00DB  0843               	movf	___xxtofl@arg+3,w
  1662  00DC  00B9               	movwf	?___xxtofl+3
  1663  00DD  0842               	movf	___xxtofl@arg+2,w
  1664  00DE  00B8               	movwf	?___xxtofl+2
  1665  00DF  0841               	movf	___xxtofl@arg+1,w
  1666  00E0  00B7               	movwf	?___xxtofl+1
  1667  00E1  0840               	movf	___xxtofl@arg,w
  1668  00E2  00B6               	movwf	?___xxtofl
  1669  00E3                     l701:	
  1670  00E3  0008               	return
  1671  00E4                     __end_of___xxtofl:	
  1672                           
  1673                           	psect	text5
  1674  0232                     __ptext5:	
  1675 ;; *************** function _isr *****************
  1676 ;; Defined at:
  1677 ;;		line 60 in file "MAIN.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          3       0       0       0       0
  1694 ;;      Totals:         3       0       0       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		___fltol
  1700 ;;		_spiRead
  1701 ;;		_spiWrite
  1702 ;; This function is called by:
  1703 ;;		Interrupt level 1
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _isr
  1709  0232                     _isr:	
  1710  0232                     i1l1192:	
  1711                           
  1712                           ;MAIN.c: 61:    if(SSPIF == 1){
  1713  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0234  1D8C               	btfss	12,3	;volatile
  1716  0235  2A37               	goto	u64_21
  1717  0236  2A38               	goto	u64_20
  1718  0237                     u64_21:	
  1719  0237  2A77               	goto	i1l1206
  1720  0238                     u64_20:	
  1721  0238                     i1l1194:	
  1722                           
  1723                           ;MAIN.c: 62:         Var1 = spiRead();
  1724  0238  120A  118A  22D2  120A  118A  	fcall	_spiRead
  1725  023D  00FB               	movwf	??_isr
  1726  023E  087B               	movf	??_isr,w
  1727  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0241  00B4               	movwf	_Var1
  1730  0242                     i1l1196:	
  1731                           
  1732                           ;MAIN.c: 63:         if(Var1==1){
  1733  0242  0334               	decf	_Var1,w
  1734  0243  1D03               	btfss	3,2
  1735  0244  2A46               	goto	u65_21
  1736  0245  2A47               	goto	u65_20
  1737  0246                     u65_21:	
  1738  0246  2A5B               	goto	i1l1200
  1739  0247                     u65_20:	
  1740  0247                     i1l1198:	
  1741                           
  1742                           ;MAIN.c: 64:             spiWrite(Sensor1);
  1743  0247  082F               	movf	_Sensor1+3,w
  1744  0248  00F3               	movwf	___fltol@f1+3
  1745  0249  082E               	movf	_Sensor1+2,w
  1746  024A  00F2               	movwf	___fltol@f1+2
  1747  024B  082D               	movf	_Sensor1+1,w
  1748  024C  00F1               	movwf	___fltol@f1+1
  1749  024D  082C               	movf	_Sensor1,w
  1750  024E  00F0               	movwf	___fltol@f1
  1751  024F  120A  118A  20E4  120A  118A  	fcall	___fltol
  1752  0254  0870               	movf	?___fltol,w
  1753  0255  120A  118A  22EA  120A  118A  	fcall	_spiWrite
  1754                           
  1755                           ;MAIN.c: 65:         }else if (Var1==2){
  1756  025A  2A74               	goto	i1l1204
  1757  025B                     i1l1200:	
  1758  025B  3002               	movlw	2
  1759  025C  0634               	xorwf	_Var1,w
  1760  025D  1D03               	btfss	3,2
  1761  025E  2A60               	goto	u66_21
  1762  025F  2A61               	goto	u66_20
  1763  0260                     u66_21:	
  1764  0260  2A74               	goto	i1l1204
  1765  0261                     u66_20:	
  1766  0261                     i1l1202:	
  1767                           
  1768                           ;MAIN.c: 66:             spiWrite(Sensor2);
  1769  0261  082B               	movf	_Sensor2+3,w
  1770  0262  00F3               	movwf	___fltol@f1+3
  1771  0263  082A               	movf	_Sensor2+2,w
  1772  0264  00F2               	movwf	___fltol@f1+2
  1773  0265  0829               	movf	_Sensor2+1,w
  1774  0266  00F1               	movwf	___fltol@f1+1
  1775  0267  0828               	movf	_Sensor2,w
  1776  0268  00F0               	movwf	___fltol@f1
  1777  0269  120A  118A  20E4  120A  118A  	fcall	___fltol
  1778  026E  0870               	movf	?___fltol,w
  1779  026F  120A  118A  22EA  120A  118A  	fcall	_spiWrite
  1780  0274                     i1l1204:	
  1781                           
  1782                           ;MAIN.c: 68:         SSPIF = 0;
  1783  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0276  118C               	bcf	12,3	;volatile
  1786  0277                     i1l1206:	
  1787                           
  1788                           ;MAIN.c: 70:    if(ADCON0bits.GO_DONE == 0){
  1789  0277  189F               	btfsc	31,1	;volatile
  1790  0278  2A7A               	goto	u67_21
  1791  0279  2A7B               	goto	u67_20
  1792  027A                     u67_21:	
  1793  027A  2A7E               	goto	i1l171
  1794  027B                     u67_20:	
  1795  027B                     i1l1208:	
  1796                           
  1797                           ;MAIN.c: 72:         adc = 1;
  1798  027B  01B5               	clrf	_adc
  1799  027C  0AB5               	incf	_adc,f
  1800                           
  1801                           ;MAIN.c: 73:         PIR1bits.ADIF = 0;
  1802  027D  130C               	bcf	12,6	;volatile
  1803  027E                     i1l171:	
  1804  027E  087D               	movf	??_isr+2,w
  1805  027F  008A               	movwf	10
  1806  0280  0E7C               	swapf	(??_isr+1)^(0+4294967168),w
  1807  0281  0083               	movwf	3
  1808  0282  0EFE               	swapf	btemp,f
  1809  0283  0E7E               	swapf	btemp,w
  1810  0284  0009               	retfie
  1811  0285                     __end_of_isr:	
  1812                           
  1813                           	psect	intentry
  1814  0004                     __pintentry:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1817                           
  1818  0004                     interrupt_function:	
  1819  007E                     saved_w	set	btemp
  1820  0004  00FE               	movwf	btemp
  1821  0005  0E03               	swapf	3,w
  1822  0006  00FC               	movwf	??_isr+1
  1823  0007  080A               	movf	10,w
  1824  0008  00FD               	movwf	??_isr+2
  1825  0009  120A  118A  2A32   	ljmp	_isr
  1826                           
  1827                           	psect	text6
  1828  02EA                     __ptext6:	
  1829 ;; *************** function _spiWrite *****************
  1830 ;; Defined at:
  1831 ;;		line 34 in file "SPI.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  dat             1    wreg     unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  dat             1    0[COMMON] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0
  1848 ;;      Totals:         1       0       0       0       0
  1849 ;;Total ram usage:        1 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_isr
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _spiWrite
  1860  02EA                     _spiWrite:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _spiWrite: [wreg]
  1864                           ;spiWrite@dat stored from wreg
  1865  02EA  00F0               	movwf	spiWrite@dat
  1866  02EB                     i1l1070:	
  1867                           
  1868                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1869  02EB  0870               	movf	spiWrite@dat,w
  1870  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1871  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1872  02EE  0093               	movwf	19	;volatile
  1873  02EF                     i1l95:	
  1874  02EF  0008               	return
  1875  02F0                     __end_of_spiWrite:	
  1876                           
  1877                           	psect	text7
  1878  02D2                     __ptext7:	
  1879 ;; *************** function _spiRead *****************
  1880 ;; Defined at:
  1881 ;;		line 47 in file "SPI.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, pclath, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		_spiReceiveWait
  1904 ;; This function is called by:
  1905 ;;		_isr
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _spiRead
  1911  02D2                     _spiRead:	
  1912  02D2                     i1l1072:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1915                           
  1916                           
  1917                           ;SPI.c: 49:     spiReceiveWait();
  1918  02D2  120A  118A  22E3  120A  118A  	fcall	_spiReceiveWait
  1919  02D7                     i1l1074:	
  1920                           
  1921                           ;SPI.c: 50:     return(SSPBUF);
  1922  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1923  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1924  02D9  0813               	movf	19,w	;volatile
  1925  02DA                     i1l103:	
  1926  02DA  0008               	return
  1927  02DB                     __end_of_spiRead:	
  1928                           
  1929                           	psect	text8
  1930  02E3                     __ptext8:	
  1931 ;; *************** function _spiReceiveWait *****************
  1932 ;; Defined at:
  1933 ;;		line 29 in file "SPI.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		None
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_spiRead
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _spiReceiveWait
  1962  02E3                     _spiReceiveWait:	
  1963  02E3                     i1l1068:	
  1964                           ;incstack = 0
  1965                           ; Regs used in _spiReceiveWait: []
  1966                           
  1967  02E3                     i1l89:	
  1968                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1969                           
  1970  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1971  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1972  02E5  1C14               	btfss	20,0	;volatile
  1973  02E6  2AE8               	goto	u39_21
  1974  02E7  2AE9               	goto	u39_20
  1975  02E8                     u39_21:	
  1976  02E8  2AE3               	goto	i1l89
  1977  02E9                     u39_20:	
  1978  02E9                     i1l92:	
  1979  02E9  0008               	return
  1980  02EA                     __end_of_spiReceiveWait:	
  1981                           
  1982                           	psect	text9
  1983  00E4                     __ptext9:	
  1984 ;; *************** function ___fltol *****************
  1985 ;; Defined at:
  1986 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  f1              4    0[COMMON] void 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  exp1            1   10[COMMON] unsigned char 
  1991 ;;  sign1           1    9[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  4    0[COMMON] long 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         4       0       0       0       0
  2002 ;;      Locals:         2       0       0       0       0
  2003 ;;      Temps:          5       0       0       0       0
  2004 ;;      Totals:        11       0       0       0       0
  2005 ;;Total ram usage:       11 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_isr
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function ___fltol
  2016  00E4                     ___fltol:	
  2017  00E4                     i1l1112:	
  2018                           ;incstack = 0
  2019                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2020                           
  2021  00E4  1003               	clrc
  2022  00E5  0D72               	rlf	___fltol@f1+2,w
  2023  00E6  0D73               	rlf	___fltol@f1+3,w
  2024  00E7  00F4               	movwf	??___fltol
  2025  00E8  0874               	movf	??___fltol,w
  2026  00E9  00FA               	movwf	___fltol@exp1
  2027  00EA  087A               	movf	___fltol@exp1,w
  2028  00EB  1D03               	btfss	3,2
  2029  00EC  28EE               	goto	u40_21
  2030  00ED  28EF               	goto	u40_20
  2031  00EE                     u40_21:	
  2032  00EE  28F8               	goto	i1l1118
  2033  00EF                     u40_20:	
  2034  00EF                     i1l1114:	
  2035  00EF  3000               	movlw	0
  2036  00F0  00F3               	movwf	?___fltol+3
  2037  00F1  3000               	movlw	0
  2038  00F2  00F2               	movwf	?___fltol+2
  2039  00F3  3000               	movlw	0
  2040  00F4  00F1               	movwf	?___fltol+1
  2041  00F5  3000               	movlw	0
  2042  00F6  00F0               	movwf	?___fltol
  2043  00F7  295D               	goto	i1l458
  2044  00F8                     i1l1118:	
  2045  00F8  0870               	movf	___fltol@f1,w
  2046  00F9  00F4               	movwf	??___fltol
  2047  00FA  0871               	movf	___fltol@f1+1,w
  2048  00FB  00F5               	movwf	??___fltol+1
  2049  00FC  0872               	movf	___fltol@f1+2,w
  2050  00FD  00F6               	movwf	??___fltol+2
  2051  00FE  0873               	movf	___fltol@f1+3,w
  2052  00FF  00F7               	movwf	??___fltol+3
  2053  0100  301F               	movlw	31
  2054  0101                     u41_25:	
  2055  0101  1003               	clrc
  2056  0102  0CF7               	rrf	??___fltol+3,f
  2057  0103  0CF6               	rrf	??___fltol+2,f
  2058  0104  0CF5               	rrf	??___fltol+1,f
  2059  0105  0CF4               	rrf	??___fltol,f
  2060  0106                     u41_20:	
  2061  0106  3EFF               	addlw	-1
  2062  0107  1D03               	skipz
  2063  0108  2901               	goto	u41_25
  2064  0109  0874               	movf	??___fltol,w
  2065  010A  00F8               	movwf	??___fltol+4
  2066  010B  0878               	movf	??___fltol+4,w
  2067  010C  00F9               	movwf	___fltol@sign1
  2068  010D                     i1l1120:	
  2069  010D  17F2               	bsf	___fltol@f1+2,7
  2070  010E                     i1l1122:	
  2071  010E  30FF               	movlw	255
  2072  010F  05F0               	andwf	___fltol@f1,f
  2073  0110  30FF               	movlw	255
  2074  0111  05F1               	andwf	___fltol@f1+1,f
  2075  0112  30FF               	movlw	255
  2076  0113  05F2               	andwf	___fltol@f1+2,f
  2077  0114  3000               	movlw	0
  2078  0115  05F3               	andwf	___fltol@f1+3,f
  2079  0116                     i1l1124:	
  2080  0116  3096               	movlw	150
  2081  0117  02FA               	subwf	___fltol@exp1,f
  2082  0118                     i1l1126:	
  2083  0118  1FFA               	btfss	___fltol@exp1,7
  2084  0119  291B               	goto	u42_21
  2085  011A  291C               	goto	u42_20
  2086  011B                     u42_21:	
  2087  011B  2936               	goto	i1l1136
  2088  011C                     u42_20:	
  2089  011C                     i1l1128:	
  2090  011C  087A               	movf	___fltol@exp1,w
  2091  011D  3A80               	xorlw	128
  2092  011E  3E97               	addlw	151
  2093  011F  1803               	skipnc
  2094  0120  2922               	goto	u43_21
  2095  0121  2923               	goto	u43_20
  2096  0122                     u43_21:	
  2097  0122  2924               	goto	i1l1134
  2098  0123                     u43_20:	
  2099  0123  28EF               	goto	i1l1114
  2100  0124                     i1l1134:	
  2101  0124  3001               	movlw	1
  2102  0125                     u44_25:	
  2103  0125  1003               	clrc
  2104  0126  0CF3               	rrf	___fltol@f1+3,f
  2105  0127  0CF2               	rrf	___fltol@f1+2,f
  2106  0128  0CF1               	rrf	___fltol@f1+1,f
  2107  0129  0CF0               	rrf	___fltol@f1,f
  2108  012A  3EFF               	addlw	-1
  2109  012B  1D03               	skipz
  2110  012C  2925               	goto	u44_25
  2111  012D  3001               	movlw	1
  2112  012E  00F4               	movwf	??___fltol
  2113  012F  0874               	movf	??___fltol,w
  2114  0130  07FA               	addwf	___fltol@exp1,f
  2115  0131  1D03               	btfss	3,2
  2116  0132  2934               	goto	u45_21
  2117  0133  2935               	goto	u45_20
  2118  0134                     u45_21:	
  2119  0134  2924               	goto	i1l1134
  2120  0135                     u45_20:	
  2121  0135  294D               	goto	i1l1144
  2122  0136                     i1l1136:	
  2123  0136  3020               	movlw	32
  2124  0137  027A               	subwf	___fltol@exp1,w
  2125  0138  1C03               	skipc
  2126  0139  293B               	goto	u46_21
  2127  013A  293C               	goto	u46_20
  2128  013B                     u46_21:	
  2129  013B  2948               	goto	i1l465
  2130  013C                     u46_20:	
  2131  013C  28EF               	goto	i1l1114
  2132  013D                     i1l1142:	
  2133  013D  3001               	movlw	1
  2134  013E  00F4               	movwf	??___fltol
  2135  013F                     u47_25:	
  2136  013F  1003               	clrc
  2137  0140  0DF0               	rlf	___fltol@f1,f
  2138  0141  0DF1               	rlf	___fltol@f1+1,f
  2139  0142  0DF2               	rlf	___fltol@f1+2,f
  2140  0143  0DF3               	rlf	___fltol@f1+3,f
  2141  0144  0BF4               	decfsz	??___fltol,f
  2142  0145  293F               	goto	u47_25
  2143  0146  3001               	movlw	1
  2144  0147  02FA               	subwf	___fltol@exp1,f
  2145  0148                     i1l465:	
  2146  0148  087A               	movf	___fltol@exp1,w
  2147  0149  1D03               	btfss	3,2
  2148  014A  294C               	goto	u48_21
  2149  014B  294D               	goto	u48_20
  2150  014C                     u48_21:	
  2151  014C  293D               	goto	i1l1142
  2152  014D                     u48_20:	
  2153  014D                     i1l1144:	
  2154  014D  0879               	movf	___fltol@sign1,w
  2155  014E  1903               	btfsc	3,2
  2156  014F  2951               	goto	u49_21
  2157  0150  2952               	goto	u49_20
  2158  0151                     u49_21:	
  2159  0151  295D               	goto	i1l468
  2160  0152                     u49_20:	
  2161  0152                     i1l1146:	
  2162  0152  09F0               	comf	___fltol@f1,f
  2163  0153  09F1               	comf	___fltol@f1+1,f
  2164  0154  09F2               	comf	___fltol@f1+2,f
  2165  0155  09F3               	comf	___fltol@f1+3,f
  2166  0156  0AF0               	incf	___fltol@f1,f
  2167  0157  1903               	skipnz
  2168  0158  0AF1               	incf	___fltol@f1+1,f
  2169  0159  1903               	skipnz
  2170  015A  0AF2               	incf	___fltol@f1+2,f
  2171  015B  1903               	skipnz
  2172  015C  0AF3               	incf	___fltol@f1+3,f
  2173  015D                     i1l468:	
  2174  015D                     i1l458:	
  2175  015D  0008               	return
  2176  015E                     __end_of___fltol:	
  2177  007E                     btemp	set	126	;btemp
  2178  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___fltol

Critical Paths under _main in BANK0

    _main->___xxtofl
    _setup->_configuracionADC
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     954
                                             14 BANK0      4     4      0
                           ___xxtofl
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     480
                   _configuracionADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _configuracionADC                                     4     3      1     120
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     403
                                             11 COMMON     3     3      0
                            ___fltol
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___xxtofl
   _setup
     _configuracionADC
     _spiInit

 _isr (ROOT)
   ___fltol
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 11:54:32 2020

              __CFG_CP$OFF 0000                _SSPSTATbits 0094                         l60 0174  
                       l61 0177                         l62 017A                         l64 0193  
                       l65 01C9                         l66 019B                         l58 0171  
                       l67 01A3                         l68 01AB                         l69 01CD  
                       l85 02CC                         l86 02D1                         fsr 0004  
                      l186 02B3                        l701 00E3                        l712 00AD  
                      l713 00B9                        l705 0091                        l699 004C  
                      u500 0030                        u501 002F                        u510 0034  
                      u511 0033                        u600 00B1                        u520 0054  
                      u601 00B0                        u521 0053                        u610 00C6  
             __CFG_CPD$OFF 0000                        u620 00D6                        u540 0075  
                      u380 02C0                        u700 020C                        u621 00D5  
                      u541 0074                        u381 02BF                        u701 020B  
                      u630 00DA                        u631 00D9                        u615 00C1  
                      u535 0067                        u560 0097                        u561 0096  
                      u555 0089                        u580 00A7                        u581 00A6  
                      u590 00AD                        u591 00AC                        u575 009C  
                      u680 01DA                        u681 01D9                        u690 01E0  
                      u691 01DF                        _adc 0035                        _isr 0232  
                      indf 0000               __CFG_LVP$OFF 0000               ___fltol@exp1 007A  
                     l1100 0299                       l1110 02B2                       l1102 029A  
                     l1040 0161                       l1104 029B                       l1106 02A6  
                     l1210 01CE                       l1044 017D                       l1060 02C0  
                     l1108 02AF                       l1220 01E8                       l1212 01D3  
                     l1150 0030                       l1062 02C4                       l1230 022D  
                     l1222 0206                       l1214 01DA                       l1160 005D  
                     l1152 0034                       l1048 01B3                       l1064 02C6  
                     l1080 0289                       l1224 020C                       l1216 01E0  
                     l1170 0088                       l1162 0062                       l1154 0044  
                     l1066 02CB                       l1058 02B7                       l1090 0292  
                     l1082 028A                       l1226 020E                       l1218 01E4  
                     l1180 00BB                       l1172 0098                       l1164 006F  
                     l1156 0054                       l1148 002B                       l1092 0293  
                     l1084 028D                       l1228 0210                       l1182 00D1  
                     l1174 00A3                       l1166 0076                       l1094 0294  
                     l1086 028E                       l1078 0285                       l1184 00D6  
                     l1176 00A7                       l1168 007A                       l1272 0185  
                     l1096 0295                       l1088 0291                       l1186 00DA  
                     l1178 00B1                       l1274 01BB                       l1098 0298  
                     l1188 00DB                       ?_isr 0070                       i1l92 02E9  
                     i1l95 02EF                       i1l89 02E3                       _Var1 0034  
             __CFG_WRT$OFF 0000                       _main 01CE                       btemp 007E  
                     start 000C              __CFG_IESO$OFF 0000                      ??_isr 007B  
            ___fltol@sign1 0079                      ?_main 0070              __CFG_WDTE$OFF 0000  
          __end_of___fltol 015E                      _ANSEL 0188                      i1l103 02DA  
                    i1l171 027E                      i1l465 0148                      i1l458 015D  
                    i1l468 015D                      _RCSTA 0018                      u40_20 00EF  
                    u40_21 00EE                      u41_20 0106                      u41_25 0101  
                    u42_20 011C                      u42_21 011B                      _SPBRG 0099  
                    u43_20 0123                      u43_21 0122                      _PORTB 0006  
                    _PORTD 0008                      u44_25 0125                      u45_20 0135  
                    u45_21 0134                      u46_20 013C                      u46_21 013B  
                    u39_20 02E9                      u39_21 02E8                      u47_25 013F  
                    u48_20 014D                      u64_20 0238                      u48_21 014C  
                    u64_21 0237                      u49_20 0152                      u65_20 0247  
                    u49_21 0151                      u65_21 0246                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      u66_20 0261  
                    _SSPIF 0063                      u66_21 0260                      u67_20 027B  
                    u67_21 027A                      _TXREG 0019                      _TXSTA 0098  
           __CFG_FCMEN$OFF 0000                      _disp1 0049                      _disp2 0048  
        ?_configuracionADC 0036                      _setup 0285             __CFG_BOREN$OFF 0000  
                    pclath 000A            __end_of_spiInit 02D2            __end_of_spiRead 02DB  
       ??_configuracionADC 0037                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 0232  
                   ??_main 0044                     _ADRESH 001E                     ?_setup 0070  
                   _ANSELH 0189                     i1l1120 010D                     i1l1112 00E4  
                   i1l1200 025B                     i1l1122 010E                     i1l1114 00EF  
                   i1l1202 0261                     i1l1124 0116                     i1l1204 0274  
                   i1l1142 013D                     i1l1134 0124                     i1l1126 0118  
                   i1l1118 00F8                     i1l1070 02EB                     i1l1206 0277  
                   i1l1144 014D                     i1l1128 011C                     i1l1136 0136  
                   i1l1072 02D2                     i1l1208 027B                     i1l1146 0152  
                   i1l1074 02D7                     i1l1068 02E3                     i1l1192 0232  
                   i1l1194 0238                     i1l1196 0242                     i1l1198 0247  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 00E4             __CFG_PWRTE$OFF 0000  
                ??___fltol 0074                     saved_w 007E           __end_of_spiWrite 02F0  
                ??_spiInit 0039                  ??_spiRead 0070               ___xxtofl@arg 0040  
             ___xxtofl@exp 003F               ___xxtofl@val 0036    __end_of__initialization 0024  
               ___fltol@f1 0070             __pcstackCOMMON 0070               __pidataBANK0 02F0  
            __end_of_setup 02B4                    ??_setup 003A                 __pbssBANK0 0020  
               __pmaintext 01CE                 __pintentry 0004    __size_of_spiReceiveWait 0007  
                ?___xxtofl 0036                    _SSPSTAT 0094                    _Channel 0030  
                  _Sensor1 002C                    _Sensor2 0028  __size_of_configuracionADC 0070  
                ?_spiWrite 0070                    ___fltol 00E4                  _ANSELbits 0188  
                  __ptext1 0285                    __ptext2 02B4                    __ptext3 015E  
                  __ptext4 0028                    __ptext5 0232                    __ptext6 02EA  
                  __ptext7 02D2                    __ptext8 02E3                    __ptext9 00E4  
             __size_of_isr 0053                 ??___xxtofl 003A                    _spiInit 02B4  
                  _spiRead 02D2                    clrloop0 02DC       end_of_initialization 0024  
               ??_spiWrite 0070              ___xxtofl@sign 003E                  _TRISAbits 0085  
                _TRISCbits 0087                spiWrite@dat 0070                  _TXSTAbits 0098  
           _spiReceiveWait 02E3                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 0285   __CFG_FOSC$INTRC_NOCLKOUT 0000     __end_of_spiReceiveWait 02EA  
         _configuracionADC 015E                __pdataBANK0 0048                  ___latbits 0002  
  configuracionADC@channel 0036              __pcstackBANK0 0036          __size_of___xxtofl 00BC  
          ?_spiReceiveWait 0070                   ?___fltol 0070          __size_of_spiWrite 0006  
                 ?_spiInit 0036                   ?_spiRead 0070             __size_of_setup 002F  
                _ncompleto 0032       spiInit@sTransmitEdge 0038          interrupt_function 0004  
                clear_ram0 02DB                   _PIE1bits 008C         spiInit@sDataSample 0036  
                 _PIR1bits 000C                 _ADCON0bits 001F                 _ADCON1bits 009F  
                 _Sensor12 0024                   _Sensor22 0020           __size_of___fltol 007A  
     configuracionADC@FOSC 0039                   ___xxtofl 0028   __end_of_configuracionADC 01CE  
         __size_of_spiInit 001E           __size_of_spiRead 0009          __CFG_BOR4V$BOR40V 0000  
            __size_of_main 0064                   _spiWrite 02EA               spiInit@sType 0039  
        spiInit@sClockIdle 0037                 _INTCONbits 000B                   intlevel1 0000  
         ??_spiReceiveWait 0070  
